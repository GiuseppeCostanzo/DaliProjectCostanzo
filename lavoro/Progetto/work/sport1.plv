 :-dynamic saldo/2. :-dynamic coda/2. :-dynamic inizio/1. :-dynamic scrittoBenvenuto/1. :-dynamic occupato/1. saldo(client1,100). saldo(client2,400). saldo(client3,25). coda(client0,99). inizio(falso). scrittoBenvenuto(falso). occupato(falso). messaggioInizio:-inizio(falso),scrittoBenvenuto(falso). evi(messaggioInizio):-write('SONO LO SPORTELLISTA, ATTENDO CHE QUALCUNO VENGA AD EFFETTUARE UNA OPERAZIONE'),nl,retract(scrittoBenvenuto(falso)),assert(scrittoBenvenuto(vero)). eve(aggiorna_clienti_attesa(A,P)):-assert(coda(A,P)),retract(inizio(falso)),assert(inizio(vero)),assert(coda(A,P)),write('NUOVO CLIENTE IN CODA'),nl. eve(prelievo(A,D)):-write('SALVE QUANTO DEVE PRELEVARE '),write(D),write('?'),a(message(A,send_message(quantoPrelievo,Me))),nl. eve(pagamento(B,E)):-write('SALVE QUANTO DEVE PAGARE '),write(E),write('?'),a(message(B,send_message(quantoPagamento,Me))),nl. eve(deposito(C,F)):-write('SALVE QUANTO DEVE DEPOSITARE '),write(F),write('?'),a(message(C,send_message(quantoDeposito,Me))),nl. eve(prelevare(C,Q)):-saldo(C,X),(Q>X->write('MI SPIACE MA NON PUO PRELEVARE PIU DI QUANTO TIENE DEPOSITATO'),nl;write('IL PRELIEVO E ANDATO A BUON FINE'),nl,aggiorna_saldo(C,Q)),a(message(C,send_message(fineOperazione,Me))),libera_coda,nl. eve(pagare(C,Q)):-saldo(C,X),(Q>X->write('MI SPIACE MA NON PUO UTILIZZARE PIU DI QUANTO TIENE DEPOSITATO'),nl;write('Il pagamento e andato a buon fine'),nl,aggiorna_saldo(C,Q)),a(message(C,send_message(fineOperazione,Me))),libera_coda,nl. aggiorna_saldo(C,Q):-retract(saldo(C,OldSaldo)),NewSaldo is OldSaldo-Q,assert(saldo(C,NewSaldo)),write('Il SALDO AGGIORNATO E '),write(NewSaldo),nl. eve(depositare(C,Q)):-write('BENE, LEI HA APPENA DEPOSITATO SUL SUO CONTO '),write(Q),write(' euro'),nl,aggiorna_deposito(C,Q),a(message(C,send_message(fineOperazione,Me))),libera_coda. aggiorna_deposito(C,Q):-retract(saldo(C,OldSaldo)),NewSaldo is OldSaldo+Q,assert(saldo(C,NewSaldo)),write('IL NUOVO SALDO E '),write(NewSaldo),nl. libera_coda:-trova_minimo_nome(NomeMin,Id),retract(coda(NomeMin,Id)),togli_occupato,retract(coda(NomeMin,Id)). metti_occupato:-retract(occupato(falso)),assert(occupato(vero)). togli_occupato:-retract(occupato(vero)),assert(occupato(falso)). sportellista_chiama:-inizio(vero),occupato(falso). evi(sportellista_chiama):-trova_minimo_nome(NomeMin,Id),(NomeMin='client0'->write('AL MOMENTO NESSUNO IN CODA'),nl;continua). continua:-trova_minimo_nome(NomeMin,Id),write('IL PROSSIMO E '),write(NomeMin),nl,a(message(NomeMin,send_message(sportellista_chiamando,Me))),metti_occupato. trova_minimo_nome(NomeMin,Id):-findall(Nome-Id,(coda(Nome,Id),Id>0),ListaFatti),trova_minimo_id(ListaFatti,9999,_,NomeMin). trova_minimo_id([Nome-Id|Resto],IdAttuale,NomeAttuale,NomeMin):-Id<IdAttuale->trova_minimo_id(Resto,Id,Nome,NomeMin);trova_minimo_id(Resto,IdAttuale,NomeAttuale,NomeMin). trova_minimo_id([],_,NomeMin,NomeMin). :-dynamic receive/1. :-dynamic send/2. :-dynamic isa/3. receive(send_message(X,Ag)):-told(Ag,send_message(X)),call_send_message(X,Ag). receive(propose(A,C,Ag)):-told(Ag,propose(A,C)),call_propose(A,C,Ag). receive(cfp(A,C,Ag)):-told(Ag,cfp(A,C)),call_cfp(A,C,Ag). receive(accept_proposal(A,Mp,Ag)):-told(Ag,accept_proposal(A,Mp),T),call_accept_proposal(A,Mp,Ag,T). receive(reject_proposal(A,Mp,Ag)):-told(Ag,reject_proposal(A,Mp),T),call_reject_proposal(A,Mp,Ag,T). receive(failure(A,M,Ag)):-told(Ag,failure(A,M),T),call_failure(A,M,Ag,T). receive(cancel(A,Ag)):-told(Ag,cancel(A)),call_cancel(A,Ag). receive(execute_proc(X,Ag)):-told(Ag,execute_proc(X)),call_execute_proc(X,Ag). receive(query_ref(X,N,Ag)):-told(Ag,query_ref(X,N)),call_query_ref(X,N,Ag). receive(inform(X,M,Ag)):-told(Ag,inform(X,M),T),call_inform(X,Ag,M,T). receive(inform(X,Ag)):-told(Ag,inform(X),T),call_inform(X,Ag,T). receive(refuse(X,Ag)):-told(Ag,refuse(X),T),call_refuse(X,Ag,T). receive(agree(X,Ag)):-told(Ag,agree(X)),call_agree(X,Ag). receive(confirm(X,Ag)):-told(Ag,confirm(X),T),call_confirm(X,Ag,T). receive(disconfirm(X,Ag)):-told(Ag,disconfirm(X)),call_disconfirm(X,Ag). receive(reply(X,Ag)):-told(Ag,reply(X)). send(To,query_ref(X,N,Ag)):-tell(To,Ag,query_ref(X,N)),send_m(To,query_ref(X,N,Ag)). send(To,send_message(X,Ag)):-tell(To,Ag,send_message(X)),send_m(To,send_message(X,Ag)). send(To,reject_proposal(X,L,Ag)):-tell(To,Ag,reject_proposal(X,L)),send_m(To,reject_proposal(X,L,Ag)). send(To,accept_proposal(X,L,Ag)):-tell(To,Ag,accept_proposal(X,L)),send_m(To,accept_proposal(X,L,Ag)). send(To,confirm(X,Ag)):-tell(To,Ag,confirm(X)),send_m(To,confirm(X,Ag)). send(To,propose(X,C,Ag)):-tell(To,Ag,propose(X,C)),send_m(To,propose(X,C,Ag)). send(To,disconfirm(X,Ag)):-tell(To,Ag,disconfirm(X)),send_m(To,disconfirm(X,Ag)). send(To,inform(X,M,Ag)):-tell(To,Ag,inform(X,M)),send_m(To,inform(X,M,Ag)). send(To,inform(X,Ag)):-tell(To,Ag,inform(X)),send_m(To,inform(X,Ag)). send(To,refuse(X,Ag)):-tell(To,Ag,refuse(X)),send_m(To,refuse(X,Ag)). send(To,failure(X,M,Ag)):-tell(To,Ag,failure(X,M)),send_m(To,failure(X,M,Ag)). send(To,execute_proc(X,Ag)):-tell(To,Ag,execute_proc(X)),send_m(To,execute_proc(X,Ag)). send(To,agree(X,Ag)):-tell(To,Ag,agree(X)),send_m(To,agree(X,Ag)). call_send_message(X,Ag):-send_message(X,Ag). call_execute_proc(X,Ag):-execute_proc(X,Ag). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),meta_ref(X,N,L,Ag),a(message(Ag,inform(query_ref(X,N),values(L),A))). call_query_ref(X,_,Ag):-clause(agent(A),_),var(X),a(message(Ag,refuse(query_ref(variable),motivation(refused_variables),A))). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),not(meta_ref(X,N,_,_)),a(message(Ag,inform(query_ref(X,N),motivation(no_values),A))). call_agree(X,Ag):-clause(agent(A),_),ground(X),meta_agree(X,Ag),a(message(Ag,inform(agree(X),values(yes),A))). call_confirm(X,Ag,T):-ground(X),statistics(walltime,[Tp,_]),asse_cosa(past_event(X,T)),retractall(past(X,Tp,Ag)),assert(past(X,Tp,Ag)). call_disconfirm(X,Ag):-ground(X),retractall(past(X,_,Ag)),retractall(past_event(X,_)). call_agree(X,Ag):-clause(agent(A),_),ground(X),not(meta_agree(X,_)),a(message(Ag,inform(agree(X),values(no),A))). call_agree(X,Ag):-clause(agent(A),_),not(ground(X)),a(message(Ag,refuse(agree(variable),motivation(refused_variables),A))). call_inform(X,Ag,M,T):-asse_cosa(past_event(inform(X,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,M,Ag),_,Ag)),assert(past(inform(X,M,Ag),Tp,Ag)). call_inform(X,Ag,T):-asse_cosa(past_event(inform(X,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,Ag),_,Ag)),assert(past(inform(X,Ag),Tp,Ag)). call_refuse(X,Ag,T):-clause(agent(A),_),asse_cosa(past_event(X,T)),statistics(walltime,[Tp,_]),retractall(past(X,_,Ag)),assert(past(X,Tp,Ag)),a(message(Ag,reply(received(X),A))). call_cfp(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_403425,Ontology,_403429),_403419),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_cfp(A,C,Ag,_403463)),a(message(Ag,propose(A,[_403463],AgI))),retractall(ext_agent(Ag,_403501,Ontology,_403505)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_403299,Ontology,_403303),_403293),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_propose(A,C,Ag)),a(message(Ag,accept_proposal(A,[],AgI))),retractall(ext_agent(Ag,_403369,Ontology,_403373)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_403187,Ontology,_403191),_403181),not(call_meta_execute_propose(A,C,Ag)),a(message(Ag,reject_proposal(A,[],AgI))),retractall(ext_agent(Ag,_403243,Ontology,_403247)). call_accept_proposal(A,Mp,Ag,T):-asse_cosa(past_event(accepted_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(accepted_proposal(A,Mp,Ag),_,Ag)),assert(past(accepted_proposal(A,Mp,Ag),Tp,Ag)). call_reject_proposal(A,Mp,Ag,T):-asse_cosa(past_event(rejected_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(rejected_proposal(A,Mp,Ag),_,Ag)),assert(past(rejected_proposal(A,Mp,Ag),Tp,Ag)). call_failure(A,M,Ag,T):-asse_cosa(past_event(failed_action(A,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(failed_action(A,M,Ag),_,Ag)),assert(past(failed_action(A,M,Ag),Tp,Ag)). call_cancel(A,Ag):-if(clause(high_action(A,Te,Ag),_402751),retractall(high_action(A,Te,Ag)),true),if(clause(normal_action(A,Te,Ag),_402785),retractall(normal_action(A,Te,Ag)),true). external_refused_action_propose(A,Ag):-clause(not_executable_action_propose(A,Ag),_). evi(external_refused_action_propose(A,Ag)):-clause(agent(Ai),_),a(message(Ag,failure(A,motivation(false_conditions),Ai))),retractall(not_executable_action_propose(A,Ag)). refused_message(AgM,Con):-clause(eliminated_message(AgM,_,_,Con,_),_). refused_message(To,M):-clause(eliminated_message(M,To,motivation(conditions_not_verified)),_402567). evi(refused_message(AgM,Con)):-clause(agent(Ai),_),a(message(AgM,inform(Con,motivation(refused_message),Ai))),retractall(eliminated_message(AgM,_,_,Con,_)),retractall(eliminated_message(Con,AgM,motivation(conditions_not_verified))). send_jasper_return_message(X,S,T,S0):-clause(agent(Ag),_402415),a(message(S,send_message(sent_rmi(X,T,S0),Ag))). gest_learn(H):-clause(past(learn(H),T,U),_402363),learn_if(H,T,U). evi(gest_learn(H)):-retractall(past(learn(H),_402239,_402241)),clause(agente(_402261,_402263,_402265,S),_402257),name(S,N),append(L,[46,112,108],N),name(F,L),manage_lg(H,F),a(learned(H)). cllearn:-clause(agente(_402033,_402035,_402037,S),_402029),name(S,N),append(L,[46,112,108],N),append(L,[46,116,120,116],To),name(FI,To),open(FI,read,_402133,[]),repeat,read(_402133,T),arg(1,T,H),write(H),nl,T==end_of_file,!,close(_402133). send_msg_learn(T,A,Ag):-a(message(Ag,confirm(learn(T),A))). told(From,send_message(M)):-true. told(Ag,execute_proc(_)):-true. told(Ag,query_ref(_,_)):-true. told(Ag,agree(_)):-true. told(Ag,confirm(_),200):-true. told(Ag,disconfirm(_)):-true. told(Ag,request(_,_)):-true. told(Ag,propose(_,_)):-true. told(Ag,accept_proposal(_,_),20):-true. told(Ag,reject_proposal(_,_),20):-true. told(_,failure(_,_),200):-true. told(_,cancel(_)):-true. told(Ag,inform(_,_),70):-true. told(Ag,inform(_),70):-true. told(Ag,reply(_)):-true. told(_,refuse(_,Xp)):-functor(Xp,Fp,_),Fp=agree. tell(To,From,send_message(M)):-true. tell(To,_,confirm(_)):-true. tell(To,_,disconfirm(_)):-true. tell(To,_,propose(_,_)):-true. tell(To,_,request(_,_)):-true. tell(To,_,execute_proc(_)):-true. tell(To,_,agree(_)):-true. tell(To,_,reject_proposal(_,_)):-true. tell(To,_,accept_proposal(_,_)):-true. tell(To,_,failure(_,_)):-true. tell(To,_,query_ref(_,_)):-true. tell(To,_,eve(_)):-true. tell(_,_,refuse(X,_)):-functor(X,F,_),(F=send_message;F=query_ref). tell(To,_,inform(_,M)):-true;M=motivation(refused_message). tell(To,_,inform(_)):-true,To\=user. tell(To,_,propose_desire(_,_)):-true. meta(P,V,AgM):-functor(P,F,N),N=0,clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,V,Pre,[Rep,Host]);same_as(F,V,Pre,[Rep,Host]);eq_class(F,V,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,V,PreM,[RepM,HostM]);same_as(F,V,PreM,[RepM,HostM]);eq_class(F,V,PreM,[RepM,HostM])),true,false),false)). meta(P,V,AgM):-functor(P,F,N),(N=1;N=2),clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,_):-functor(P,F,N),N=2,symmetric(F),P=..L,delete(L,F,R),reverse(R,R1),append([F],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),functor(P,F,N),N=2,(symmetric(F,AgM);symmetric(F)),P=..L,delete(L,F,R),reverse(R,R1),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,Y,Pre,[Rep,Host]);same_as(F,Y,Pre,[Rep,Host]);eq_class(F,Y,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,Y,PreM,[RepM,HostM]);same_as(F,Y,PreM,[RepM,HostM]);eq_class(F,Y,PreM,[RepM,HostM])),true,false),false)),append([Y],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N>2,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N=2,P=..L,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),substitute(F,L,H,Lf),V=..Lf.
a(learned(_1025721)):-cd(learned(_1025721)),assert(do_action(learned(_1025721),program)).
cd(learned(_1025721)):-true.
a(message(_1025729,confirm(learn(_1025741),_1025737))):-cd(message(_1025729,confirm(learn(_1025741),_1025737))),assert(do_action(message(_1025729,confirm(learn(_1025741),_1025737)),program)).
cd(message(_1025729,confirm(learn(_1025741),_1025737))):-true.
a(message(_1025749,send_message(quantoPrelievo,_1025757))):-cd(message(_1025749,send_message(quantoPrelievo,_1025757))),assert(do_action(message(_1025749,send_message(quantoPrelievo,_1025757)),program)).
cd(message(_1025749,send_message(quantoPrelievo,_1025757))):-true.
a(message(_1025765,reply(received(_1025777),_1025749))):-cd(message(_1025765,reply(received(_1025777),_1025749))),assert(do_action(message(_1025765,reply(received(_1025777),_1025749)),program)).
cd(message(_1025765,reply(received(_1025777),_1025749))):-true.
a(message(_1025765,accept_proposal(_1025749,[],_1025795))):-cd(message(_1025765,accept_proposal(_1025749,[],_1025795))),assert(do_action(message(_1025765,accept_proposal(_1025749,[],_1025795)),program)).
cd(message(_1025765,accept_proposal(_1025749,[],_1025795))):-true.
a(message(_1025765,failure(_1025749,motivation(false_conditions),_1025813))):-cd(message(_1025765,failure(_1025749,motivation(false_conditions),_1025813))),assert(do_action(message(_1025765,failure(_1025749,motivation(false_conditions),_1025813)),program)).
cd(message(_1025765,failure(_1025749,motivation(false_conditions),_1025813))):-true.
a(message(_1025765,inform(agree(_1025777),values(no),_1025749))):-cd(message(_1025765,inform(agree(_1025777),values(no),_1025749))),assert(do_action(message(_1025765,inform(agree(_1025777),values(no),_1025749)),program)).
cd(message(_1025765,inform(agree(_1025777),values(no),_1025749))):-true.
a(message(_1025765,inform(agree(_1025777),values(yes),_1025749))):-cd(message(_1025765,inform(agree(_1025777),values(yes),_1025749))),assert(do_action(message(_1025765,inform(agree(_1025777),values(yes),_1025749)),program)).
cd(message(_1025765,inform(agree(_1025777),values(yes),_1025749))):-true.
a(message(_1025765,inform(query_ref(_1025777,_1025893),motivation(no_values),_1025749))):-cd(message(_1025765,inform(query_ref(_1025777,_1025893),motivation(no_values),_1025749))),assert(do_action(message(_1025765,inform(query_ref(_1025777,_1025893),motivation(no_values),_1025749)),program)).
cd(message(_1025765,inform(query_ref(_1025777,_1025893),motivation(no_values),_1025749))):-true.
a(message(_1025765,inform(query_ref(_1025777,_1025893),values(_1025925),_1025749))):-cd(message(_1025765,inform(query_ref(_1025777,_1025893),values(_1025925),_1025749))),assert(do_action(message(_1025765,inform(query_ref(_1025777,_1025893),values(_1025925),_1025749)),program)).
cd(message(_1025765,inform(query_ref(_1025777,_1025893),values(_1025925),_1025749))):-true.
a(message(_1025765,propose(_1025749,[_1025945],_1025795))):-cd(message(_1025765,propose(_1025749,[_1025945],_1025795))),assert(do_action(message(_1025765,propose(_1025749,[_1025945],_1025795)),program)).
cd(message(_1025765,propose(_1025749,[_1025945],_1025795))):-true.
a(message(_1025765,refuse(agree(variable),motivation(refused_variables),_1025749))):-cd(message(_1025765,refuse(agree(variable),motivation(refused_variables),_1025749))),assert(do_action(message(_1025765,refuse(agree(variable),motivation(refused_variables),_1025749)),program)).
cd(message(_1025765,refuse(agree(variable),motivation(refused_variables),_1025749))):-true.
a(message(_1025765,refuse(query_ref(variable),motivation(refused_variables),_1025749))):-cd(message(_1025765,refuse(query_ref(variable),motivation(refused_variables),_1025749))),assert(do_action(message(_1025765,refuse(query_ref(variable),motivation(refused_variables),_1025749)),program)).
cd(message(_1025765,refuse(query_ref(variable),motivation(refused_variables),_1025749))):-true.
a(message(_1025765,reject_proposal(_1025749,[],_1025795))):-cd(message(_1025765,reject_proposal(_1025749,[],_1025795))),assert(do_action(message(_1025765,reject_proposal(_1025749,[],_1025795)),program)).
cd(message(_1025765,reject_proposal(_1025749,[],_1025795))):-true.
a(message(_1026025,inform(_1026031,motivation(refused_message),_1025813))):-cd(message(_1026025,inform(_1026031,motivation(refused_message),_1025813))),assert(do_action(message(_1026025,inform(_1026031,motivation(refused_message),_1025813)),program)).
cd(message(_1026025,inform(_1026031,motivation(refused_message),_1025813))):-true.
a(message(_1026047,send_message(quantoPagamento,_1025757))):-cd(message(_1026047,send_message(quantoPagamento,_1025757))),assert(do_action(message(_1026047,send_message(quantoPagamento,_1025757)),program)).
cd(message(_1026047,send_message(quantoPagamento,_1025757))):-true.
a(message(_1026063,send_message(fineOperazione,_1025757))):-cd(message(_1026063,send_message(fineOperazione,_1025757))),assert(do_action(message(_1026063,send_message(fineOperazione,_1025757)),program)).
cd(message(_1026063,send_message(fineOperazione,_1025757))):-true.
a(message(_1026063,send_message(quantoDeposito,_1025757))):-cd(message(_1026063,send_message(quantoDeposito,_1025757))),assert(do_action(message(_1026063,send_message(quantoDeposito,_1025757)),program)).
cd(message(_1026063,send_message(quantoDeposito,_1025757))):-true.
a(message(_1026095,send_message(sportellista_chiamando,_1025757))):-cd(message(_1026095,send_message(sportellista_chiamando,_1025757))),assert(do_action(message(_1026095,send_message(sportellista_chiamando,_1025757)),program)).
cd(message(_1026095,send_message(sportellista_chiamando,_1025757))):-true.
a(message(_1026111,send_message(sent_rmi(_1025777,_1026125,_1026127),_1025765))):-cd(message(_1026111,send_message(sent_rmi(_1025777,_1026125,_1026127),_1025765))),assert(do_action(message(_1026111,send_message(sent_rmi(_1025777,_1026125,_1026127),_1025765)),program)).
cd(message(_1026111,send_message(sent_rmi(_1025777,_1026125,_1026127),_1025765))):-true.
eve_cond(aggiorna_clienti_attesa(_1052473,_1052475)):-cd(aggiorna_clienti_attesa(_1052473,_1052475)),eve(aggiorna_clienti_attesa(_1052473,_1052475)).
cd(aggiorna_clienti_attesa(_1052473,_1052475)):-true.
eve_cond(depositare(_1052483,_1052485)):-cd(depositare(_1052483,_1052485)),eve(depositare(_1052483,_1052485)).
cd(depositare(_1052483,_1052485)):-true.
eve_cond(deposito(_1052483,_1052495)):-cd(deposito(_1052483,_1052495)),eve(deposito(_1052483,_1052495)).
cd(deposito(_1052483,_1052495)):-true.
eve_cond(pagamento(_1052503,_1052505)):-cd(pagamento(_1052503,_1052505)),eve(pagamento(_1052503,_1052505)).
cd(pagamento(_1052503,_1052505)):-true.
eve_cond(pagare(_1052483,_1052485)):-cd(pagare(_1052483,_1052485)),eve(pagare(_1052483,_1052485)).
cd(pagare(_1052483,_1052485)):-true.
eve_cond(prelevare(_1052483,_1052485)):-cd(prelevare(_1052483,_1052485)),eve(prelevare(_1052483,_1052485)).
cd(prelevare(_1052483,_1052485)):-true.
eve_cond(prelievo(_1052473,_1052535)):-cd(prelievo(_1052473,_1052535)),eve(prelievo(_1052473,_1052535)).
cd(prelievo(_1052473,_1052535)):-true.